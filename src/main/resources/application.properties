#################################################################################
##  VERIFICAR O TIMEZONE DO BANCO DE DADOS - DEIXAR TODOS OS AMBIENTES IGUAIS  ##
##                 (DESENVOLVIMENTO / HOMOLOGACAO / PRODUCAO)                  ##
##                                                                             ##
##  SELECT @@system_time_zone;                                                 ##
##  SET @@global.time_zone = '+3:00';                                          ##
##  select now()                                                               ##
#################################################################################

####################################################################################################
##  Erro de caching_sha2_password                                                                 ##
##                                                                                                ##
##  A partir do MySQL 8.0.4, a equipe do MySQL mudou o plugin de autenticacao padrao              ##
##  para o servidor MySQL de mysql_native_password para caching_sha2_password.                    ##
##                                                                                                ##
##  Portanto, ha tres maneiras de resolver esse problema:                                         ##
##                                                                                                ##
##  1. drop USER 'user_name'@'localhost';                                                         ##
##     flush privileges;                                                                          ##
##     CREATE USER 'user_name'@'localhost' IDENTIFIED BY 'user_name';                             ##
##     GRANT ALL PRIVILEGES ON * . * TO 'user_name'@'localhost';                                  ##
##     ALTER USER 'user_name'@'localhost' IDENTIFIED WITH mysql_native_password BY 'user_name';   ##
##                                                                                                ##
##  2. drop USER 'user_name'@'localhost';                                                         ##
##     flush privileges;                                                                          ##
##     CREATE USER 'user_name'@'localhost' IDENTIFIED WITH mysql_native_password BY 'user_name';  ##
##     GRANT ALL PRIVILEGES ON * . * TO 'user_name'@'localhost'                                   ##
##                                                                                                ##
##  3 - Se o usuario ja estiver criado, use o seguinte comando:                                   ##
##      ALTER USER 'user_name'@'localhost' IDENTIFIED WITH mysql_native_password BY 'user_name';  ##
####################################################################################################



#Container config
server.port=8080

# CONEXAO COM BANCO DE DADOS
#spring.datasource.url=jdbc:mysql://localhost/transport_api?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root

#spring.datasource.url=jdbc:mysql://${GOOGLE_CLOUD_MYSQL_DB_HOST}:${GOOGLE_CLOUD_MYSQL_DB_PORT}/${GOOGLE_CLOUD_MYSQL_DB_NAME}?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.username=${GOOGLE_CLOUD_MYSQL_DB_USER}
#spring.datasource.password=${GOOGLE_CLOUD_MYSQL_DB_PASSWORD}

spring.datasource.url=jdbc:mysql://i943okdfa47xqzpy.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/xotze7m9gexpnnyb
spring.datasource.username=i12297ampo90n509
spring.datasource.password=jml73vf7sheeyk29


spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=MYSQL

# pool connections
spring.datasource.tomcat.remove-abandoned=true
spring.datasource.tomcat.remove-abandoned-timeout=120
spring.datasource.tomcat.log-abandoned=true
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=6
spring.datasource.tomcat.max-idle=6
spring.datasource.tomcat.min-idle=2
spring.datasource.tomcat.initial-size=2
spring.datasource.tomcat.validation-query=select 1
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.test-on-connect=true
spring.datasource.tomcat.test-while-idle=true

# transport api
custom-property.security.enable-https=false

# Cryptography - secretKeyAes e obrigatorio ter 16 caracteres
custom-property.security.enable-cryptography=true
custom-property.security.secret-key-aes=1234567890123456

# Console
spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

# migration
flyway.baseline-on-migrate=true
flyway.validate-on-migrate=false

# JACKSON CONVERTER
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone:America/Sao_Paulo

# Cors
custom-property.security.enable-cors=false
custom-property.origin-allowed=http://localhost:4200

# Security
#spring.profiles.active=basic-security
spring.profiles.active=oauth-security
